<Window x:Class="WPFPractice.styles.DatagridStyle"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="DatagridStyle" Height="300" Width="300">
    <Window.Resources>

        
        <LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1" x:Key="ColorWhiteLightBlue">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="LightBlue" Offset="1"/>
        </LinearGradientBrush>
               
        <!--
        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="abc" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        -->
        
        <Style TargetType="{x:Type DataGrid}" x:Key="DGV1">
            <Setter Property="Margin" Value="0,10,0,10" />
            <Setter Property="AlternatingRowBackground" Value="LightBlue" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}" >
                        <Setter Property="Background" Value="{StaticResource ColorWhiteLightBlue}"/>
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="DGV2">
            <Setter Property="Margin" Value="0,10,0,10" />
            <Setter Property="AlternatingRowBackground" Value="LightBlue" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}" >
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="82" />
            <RowDefinition Height="179*" />
        </Grid.RowDefinitions>
        
        <!-- For different effect, remove border bg and put style as DGV1-->
        <Border Grid.Row="1" Margin="10" CornerRadius="8" Background="LightBlue"  >
            <DataGrid ItemsSource="{Binding Pos}" Style="{StaticResource DGV2}">

                <!--The problem is that the Padding isn't transfered to the Border that's in the Template for DataGridCell. 
                You can edit the Template and add the TemplateBinding for Padding-->
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>                
            </DataGrid>
        </Border>
    </Grid>
</Window>
